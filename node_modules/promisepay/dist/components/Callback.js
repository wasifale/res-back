'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _BaseComponent = require('./BaseComponent');

var _BaseComponent2 = _interopRequireDefault(_BaseComponent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const URI_BASE = '/callbacks';

let Callback = class Callback extends _BaseComponent2.default {
  create(_ref) {
    let description = _ref.description;
    let url = _ref.url;
    let object_type = _ref.object_type;
    let enabled = _ref.enabled;

    return this.client.post(`${ URI_BASE }`, { description: description, url: url, object_type: object_type, enabled: enabled });
  }

  list(_ref2) {
    let limit = _ref2.limit;
    let offset = _ref2.offset;
    let filter = _ref2.filter;
    let id = _ref2.id;

    return this.client.get(`${ URI_BASE }`, { limit: limit, offset: offset, filter: filter, id: id });
  }

  get(id) {
    return this.client.get(`${ URI_BASE }/${ id }`);
  }

  update(id, _ref3) {
    let description = _ref3.description;
    let url = _ref3.url;
    let object_type = _ref3.object_type;
    let enabled = _ref3.enabled;

    return this.client.patch(`${ URI_BASE }/${ id }`, { description: description, url: url, object_type: object_type, enabled: enabled });
  }

  delete(id) {
    return this.client.delete(`${ URI_BASE }/${ id }`);
  }

  listResponses(id) {
    return this.client.get(`${ URI_BASE }/${ id }/responses`);
  }

  getCallbackResponse(id, responseId) {
    return this.client.get(`${ URI_BASE }/${ id }/responses/${ responseId }`);
  }
};
exports.default = Callback;