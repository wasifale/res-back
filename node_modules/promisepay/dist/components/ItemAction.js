'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _BaseComponent = require('./BaseComponent');

var _BaseComponent2 = _interopRequireDefault(_BaseComponent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const URI_BASE = '/items';

let ItemAction = class ItemAction extends _BaseComponent2.default {
  triggerAction(action, itemId, params) {
    return this.client.patch(`${ URI_BASE }/${ itemId }/${ action }`, params);
  }

  requestPayment(itemId) {
    return this.triggerAction('request_payment', itemId);
  }

  makePayment(itemId, _ref) {
    let account_id = _ref.account_id;
    let ip_address = _ref.ip_address;
    let device_id = _ref.device_id;

    return this.triggerAction('make_payment', itemId, { account_id: account_id, ip_address: ip_address, device_id: device_id });
  }

  requestRelease(itemId, _ref2) {
    let release_amount = _ref2.release_amount;

    return this.triggerAction('request_release', itemId, { release_amount: release_amount });
  }

  releasePayment(itemId, _ref3) {
    let release_amount = _ref3.release_amount;
    let flag_release = _ref3.flag_release;

    return this.triggerAction('release_payment', itemId, { release_amount: release_amount, flag_release: flag_release });
  }

  requestRefund(itemId, _ref4) {
    let refund_amount = _ref4.refund_amount;
    let refund_message = _ref4.refund_message;

    return this.triggerAction('request_refund', itemId, { refund_amount: refund_amount, refund_message: refund_message });
  }

  refund(itemId, _ref5) {
    let refund_amount = _ref5.refund_amount;
    let refund_message = _ref5.refund_message;

    return this.triggerAction('refund', itemId, { refund_amount: refund_amount, refund_message: refund_message });
  }

  declineRefund(itemId) {
    return this.triggerAction('decline_refund', itemId);
  }

  raiseDispute(itemId, _ref6) {
    let user_id = _ref6.user_id;

    return this.triggerAction('raise_dispute', itemId, { user_id: user_id });
  }

  requestDisputeResolution(itemId) {
    return this.triggerAction('request_resolve_dispute', itemId);
  }

  resolveDispute(itemId) {
    return this.triggerAction('resolve_dispute', itemId);
  }

  escalateDispute(itemId) {
    return this.triggerAction('escalate_dispute', itemId);
  }

  acknowledgeWireTransfer(itemId) {
    return this.triggerAction('acknowledge_wire', itemId);
  }

  revertWireTransfer(itemId) {
    return this.triggerAction('revert_wire', itemId);
  }

  cancel(itemId) {
    return this.triggerAction('cancel', itemId);
  }

  sendTaxInvoice(itemId) {
    return this.triggerAction('send_tax_invoice', itemId);
  }

  requestTaxInvoice(itemId) {
    return this.triggerAction('request_tax_invoice', itemId);
  }
};
exports.default = ItemAction;